(in-package :stumpwm)


;; swank
(load "/usr/share/emacs/site-lisp/slime/swank-loader.lisp")
(swank-loader:init)
(defcommand swank () ()
  (swank:create-server :port 4005
                       :style swank:*communication-style*
		       :coding-system "utf-8-unix"
                       :dont-close t)
  (echo-string (current-screen) "Starting swank."))
(define-key *root-map* (kbd "C-s") "swank")
(swank)

;; makeup
(setf *message-window-gravity* :center)
(setf *input-window-gravity* :center)
(setf *screen-mode-line-format* '("%W | "))
(setf *mode-line-position* :bottom)
(setf *mode-line-border-color* "black")
(setf *mouse-focus-policy* :click)
(set-font "-misc-*-*-*-*-*-15-*-*-*-*-*-*-r")
(setf *window-format* "%n - %c ")
(enable-mode-line (current-screen) (current-head) t)

;; groups

(defcommand switch-or-create-group (idx) ((:number idx))
  (let ((str (write-to-string idx)))
    (if (find-group (current-screen) str)
	(eval-command (concatenate 'string "gselect " str))
	(progn (gnew str)
	       (echo-string (current-screen) "New group created")))))

(defcommand switch-or-create-float-group (idx) ((:number idx))
  (let ((str (write-to-string idx)))
    (if (find-group (current-screen) str)
	(eval-command (concatenate 'string "gselect " str))
	(progn (gnew-float str)
	       (echo-string (current-screen) "New float group created")))))

(defcommand gmove-to (idx) ((:number idx))
  (gmove (find-group (current-screen) (write-to-string idx)))
  (echo-string (current-screen)
	       (concatenate 'string "This window now in group " (write-to-string idx))))

;; program shortcuts

(defmacro define-program-commands (&rest names)
  `(progn
     ,@(mapcar #'(lambda (name)
		   `(defcommand ,(read-from-string name) () ()
		      (run-or-raise ,name (list :class ,name))))
	       names)))


(define-program-commands
  "chromium"
  "urxvt")

;; keybindings

(defmacro define-keys (map &rest keys)
  `(progn
     ,@(mapcar #'(lambda (k)
		   `(define-key ,map (kbd ,(first k)) ,(second k)))
	       keys)))

(define-keys *top-map*
  ("s-C" "chromium")
  ("s-T" "urxvt")
  ("s-P" "psi")
  ("s-R" "loadrc")
  ; switching frames
  ("M-TAB" "next")
  ("s-TAB" "prev")
  ; switching groups
  ("M-F1" "gselect Default")
  ("M-F2" "switch-or-create-group 2")
  ("M-F3" "switch-or-create-group 3")
  ("M-F4" "switch-or-create-group 4")
  ("M-F5" "switch-or-create-group 5")
  ("s-F2" "switch-or-create-float-group 2")
  ("s-F3" "switch-or-create-float-group 3")
  ("s-F4" "switch-or-create-float-group 4")
  ("s-F5" "switch-or-create-float-group 5"))

(set-prefix-key (kbd "s-z"))

(define-keys *root-map*
  ("d" "echo-date")
  ; moving window to group
  ("M-F1" "gmove-to 1")
  ("M-F2" "gmove-to 2")
  ("M-F3" "gmove-to 3")
  ("M-F4" "gmove-to 4")
  ("M-F5" "gmove-to 5"))

;; contrib

(set-contrib-dir "/usr/share/stumpwm/")

;; special program startup

(defcommand psi () ()
  (when (typep (current-group) 'tile-group)
    (hsplit)
    (resize (- (round (/ (screen-width (current-screen)) 3)))
	    (screen-height (current-screen))))
  (run-or-raise "psi" '(:class "psi")))

;; mpd, audio

(defcommand mpd-init ()()
  (when (not (probe-file "/var/run/mpd/mpd.pid"))
    (sb-ext:process-wait (run-shell-command "/etc/rc.d/mpd restart")))
  (run-shell-command "mpc ls | mpc add")
  (run-shell-command "urxvt -e \"ncmpc\"")
  (echo-string (current-screen) "MPD started"))

(defcommand mpd-seek-forward ()() (run-shell-command "mpc seek 10"))
(defcommand mpd-seek-backward ()() (run-shell-command "mpc seek -10"))
(defcommand mpd-next ()() (run-shell-command "mpc next"))
(defcommand mpd-prev ()() (run-shell-command "mpc prev"))
(defcommand mpd-toggle ()() (run-shell-command "mpc toggle"))

(defcommand master-volume-inc ()() (run-shell-command "amixer sset \"Master\" 3+"))
(defcommand master-volume-dec ()() (run-shell-command "amixer sset \"Master\" 3-"))

(define-keys *root-map*
  ("s-m" "mpd-init"))

(define-keys *top-map*
  ("s-Right" "mpd-seek-forward")
  ("s-Left" "mpd-seek-backward")
  ("s-Up" "master-volume-inc")
  ("s-Down" "master-volume-dec")
  ("C-s-Left" "mpd-prev")
  ("C-s-Right" "mpd-next")
  ("s-p" "mpd-toggle"))
